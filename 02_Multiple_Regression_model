# importing labries 

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


# Read dataset or csv file 

dataset = pd.read_csv("Data_file.csv")

# Dependent & independent variables 

X = dataset.iloc[:, _].values
Y = dataset.iloc[:, _].values

# categoraical variables

from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_X = LabelEncoder()
X[:, _] = labelencoder_X.fit_transform(X[:, _])

onehotencoder_X = OneHotEncoder(categorical_features = [3])
X = onehotencoder_X.fit_transform(X).toarray()

X = X[:, _]

#splitting the train and testses

from sklearn.cross_validation import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)


# fitting linear regression 
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, Y_train)

# predict testset result 
Y_pred = regressor.predict(X_test)

# BAckward eliminations models
import statsmodels.formula.api as sm
X = np.append(arr = np.ones((50, 1)).astype(int), values = X, axis = 1)
# fit model using backward elimination steps 
X_opt = X[:, [0, 1, 2, 3, 4, 5]]
regressor_ols = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_ols.summary()

X_opt = X[:, [0, 1, 3, 4, 5]]
regressor_ols = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_ols.summary()

X_opt = X[:, [0, 3, 4, 5]]
regressor_ols = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_ols.summary()

X_opt = X[:, [0, 3, 5]]
regressor_ols = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_ols.summary()

X_opt = X[:, [0, 3,]]
regressor_ols = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_ols.summary()


